{
 "name": "clinical_trials_matching_question_generation",
 "id": "1709449a-a017-4464-be4e-0c6058efa7f8",
 "scenario_trigger": "clinical_trials_matching_question_generation",
 "description": "clinical_trials_matching_question_generation",
 "active": true,
 "updated": "2022-12-26T09:52:02.528Z",
 "userDisplayName": "Yochai Lehman",
 "code": "{\"version\":3,\"steps\":[{\"id\":\"bfaae5ea8406-efe280376b1da428-7c18\",\"type\":\"action\",\"label\":\"Init\",\"designer\":{\"xLocation\":332,\"yLocation\":0,\"next\":\"5a7612a135ea-f722c6246f11df1a-3c52\"},\"onInit\":\"scenario.question = scenario.scenarioArgs.question;\\r\\nscenario.profile = scenario.scenarioArgs.profile;\\r\\nscenario.questionsNum = scenario.scenarioArgs.questionsNum;\\r\\nscenario.dontKnowRegex = \\\"[D,d]on[',']?t [K,k]now|[N,n]ot [S,s]ure|[D,d]on[',']?t [W,w]ant [T,t]o [A,a]nswer\\\";\"},{\"id\":\"5a7612a135ea-f722c6246f11df1a-3c52\",\"type\":\"datasource\",\"designer\":{\"xLocation\":326,\"yLocation\":82,\"next\":\"a3c94443f8bf-cb9a8364eac92c34-ca3c\"},\"dataConnection\":\"\",\"urlBase\":\"conversation.resourcesUrl\",\"urlPath\":\"\\\"UmlsConceptsMapping.json\\\"\",\"urlParams\":\"\",\"method\":\"get\",\"headers\":\"\",\"opJson\":true,\"opResolveWithFullResponse\":false,\"response\":\"languageJson\",\"error\":\"error\",\"label\":\"Read Language\"},{\"id\":\"3710c6e2876e-55c99f0c2563d4f5-647e\",\"type\":\"switch\",\"designer\":{\"xLocation\":234,\"yLocation\":235},\"cases\":[{\"value\":\"Numeric\",\"viewId\":\"58a503ab-cfe2-449b-9904-e815f3d39105\",\"targetStepId\":\"3ea76a3a5e9c-4532826d6e64fc15-ffc7\"},{\"value\":\"Boolean\",\"viewId\":\"789148a6-34db-46e2-b13a-0efac7d02350\",\"targetStepId\":\"2cee13d07505-d11c62fe3c91ca09-5485\"},{\"value\":\"Choice\",\"viewId\":\"72c9e865-8756-4d40-a7c1-57bb16c552c8\",\"targetStepId\":\"f3afc3fc6aec-13259a9ba88e3d44-3f8b\"},{\"value\":\"MultiChoice\",\"viewId\":\"c9674b7f-ef84-41c5-8859-0d75965b8564\",\"targetStepId\":\"8aeffd2e40e8-337b6d429d9549c3-722d\"}],\"condition\":\"scenario.answerType\",\"label\":\"Question Type\"},{\"id\":\"3ea76a3a5e9c-4532826d6e64fc15-ffc7\",\"type\":\"prompt\",\"dataType\":\"string\",\"designer\":{\"xLocation\":186,\"yLocation\":402,\"next\":\"866538462ffa-d8fd8b6a3b13d383-9195\"},\"text\":\"scenario.questionText\",\"variable\":\"responseNum\",\"stringId\":\"stringId_a7f871b773048268\",\"label\":\"Numeric\",\"suggestions\":\"\"},{\"id\":\"2cee13d07505-d11c62fe3c91ca09-5485\",\"type\":\"prompt\",\"dataType\":\"[\\\"Yes\\\", \\\"No\\\", \\\"Don't know / Don't want to answer\\\"]\",\"designer\":{\"xLocation\":332,\"yLocation\":398,\"next\":\"218a732dc7f7-b3ded10c1434bb26-8d69\",\"listStyle\":3},\"text\":\"scenario.questionText\",\"variable\":\"response\",\"stringId\":\"stringId_ae418de099b3a8e9\",\"label\":\"Boolean\",\"choiceType\":\"choice\"},{\"id\":\"60e09c9bdc82-fd2741a80f33e4f4-d9e4\",\"type\":\"prompt\",\"dataType\":\"scenario.choicesArray\",\"designer\":{\"xLocation\":458,\"yLocation\":398,\"next\":\"c71c7e89b0b2-ad9de91f4ba898fc-fc9e\",\"listStyle\":3},\"text\":\"scenario.questionText\",\"variable\":\"response\",\"stringId\":\"stringId_02e974a5da66a1f8\",\"choiceType\":\"choice\",\"label\":\"Choice\"},{\"id\":\"d2c813d56c6d-e873f367b262b7e6-030c\",\"type\":\"endwithresult\",\"designer\":{\"xLocation\":418,\"yLocation\":840},\"endScope\":\"scenario\",\"returnValue\":\"scenario.result\",\"label\":\"Scenario Result\"},{\"id\":\"f3afc3fc6aec-13259a9ba88e3d44-3f8b\",\"type\":\"action\",\"label\":\"Prepare Choices\",\"designer\":{\"xLocation\":466,\"yLocation\":316,\"next\":\"60e09c9bdc82-fd2741a80f33e4f4-d9e4\"},\"onInit\":\"scenario.choicesArray = scenario.choices.map(choice => choice.toString());\\nscenario.choicesArray.push(\\\"Don't know / Don't want to answer\\\");\"},{\"id\":\"218a732dc7f7-b3ded10c1434bb26-8d69\",\"type\":\"action\",\"label\":\"Boolean Response\",\"designer\":{\"xLocation\":338,\"yLocation\":457,\"next\":\"2274bf2a7d60-31187438797a7524-cb1e\"},\"onInit\":\"if (scenario.response.entity === \\\"Yes\\\") {\\n    scenario.response = \\\"true\\\";\\n} else if (scenario.response.entity === \\\"No\\\") {\\n    scenario.response = \\\"false\\\";\\n} else {\\n    scenario.response = null;\\n}\"},{\"id\":\"c71c7e89b0b2-ad9de91f4ba898fc-fc9e\",\"type\":\"action\",\"label\":\"Choice Response\",\"designer\":{\"xLocation\":466,\"yLocation\":458,\"next\":\"2274bf2a7d60-31187438797a7524-cb1e\"},\"onInit\":\"scenario.response = scenario.response.entity;\"},{\"id\":\"2274bf2a7d60-31187438797a7524-cb1e\",\"type\":\"action\",\"label\":\"Don't know handling\",\"designer\":{\"xLocation\":340,\"yLocation\":602,\"next\":\"1a3faa5227a9-d3b84705529e7419-838f\"},\"onInit\":\"if (scenario.response && new RegExp(scenario.dontKnowRegex).test(scenario.response)) {\\n    scenario.response = null;\\n}\"},{\"id\":\"866538462ffa-d8fd8b6a3b13d383-9195\",\"type\":\"action\",\"label\":\"Numeric Response\",\"designer\":{\"xLocation\":192,\"yLocation\":460,\"next\":\"867f3d768ac6-b2cd67ca62309894-52a6\"},\"onInit\":\"if (new RegExp(scenario.dontKnowRegex).test(scenario.responseNum)) {\\r\\n    scenario.num = null;\\r\\n} else {\\r\\n    scenario.num = parseFloat(scenario.responseNum);\\r\\n}\"},{\"id\":\"867f3d768ac6-b2cd67ca62309894-52a6\",\"type\":\"branch\",\"condition\":\"Number.isNaN(scenario.num)\",\"designer\":{\"xLocation\":126,\"yLocation\":522,\"reverse\":true,\"next\":\"71b4f50f833a-b15090e77a91a966-0ee0\"},\"label\":\"Is NaN\",\"targetStepId\":\"a87f34be753f-59cc272dc1a85b29-5eaa\"},{\"id\":\"71b4f50f833a-b15090e77a91a966-0ee0\",\"type\":\"action\",\"label\":\"Set Response\",\"designer\":{\"xLocation\":186,\"yLocation\":602,\"next\":\"2274bf2a7d60-31187438797a7524-cb1e\"},\"onInit\":\"if (scenario.num != null) {\\n    scenario.response = scenario.num.toString();\\n} else {\\n    scenario.response = null;\\n}\"},{\"id\":\"a87f34be753f-59cc272dc1a85b29-5eaa\",\"type\":\"statement\",\"designer\":{\"xLocation\":0,\"yLocation\":541,\"next\":\"3ea76a3a5e9c-4532826d6e64fc15-ffc7\"},\"text\":\"customLocalizedStrings[\\\"CTM/messages/enterNumber\\\"]\",\"stringId\":\"stringId_58d05e50bd880b8a\",\"label\":\"Enter Number\"},{\"id\":\"a3c94443f8bf-cb9a8364eac92c34-ca3c\",\"type\":\"action\",\"label\":\"Generate Question\",\"designer\":{\"xLocation\":332,\"yLocation\":149,\"next\":\"4b1932a7c977-8d1720745c3e8cdb-4079\"},\"onInit\":\"var ayalonEntityType;\\n\\nif(!scenario.question.value) {\\n    ayalonEntityType = \\\"\\\";\\n}else {\\n    let keyValuePairs = scenario.question.value.split(\\\";\\\").map(chunk => chunk.split(\\\":\\\"));\\n    const map = new Map(keyValuePairs);\\n    ayalonEntityType = map.get(\\\"EntityType\\\");\\n    if(ayalonEntityType) {\\n        ayalonEntityType = ayalonEntityType.toUpperCase();\\n    }\\n    const attributeType = map.get(\\\"AttributeType\\\");\\n    if(attributeType)  {\\n        ayalonEntityType += \\\"-\\\" + attributeType.toUpperCase();\\n    }\\n}\\nconst semanticTypeKey = ayalonEntityType + \\\",\\\" + scenario.question.semanticType;\\nlet concept =  scenario.languageJson.allowedConcepts[scenario.question.code] || scenario.languageJson.textualConcepts[scenario.question.code] || \\n    scenario.languageJson.textualConcepts[scenario.question.code.toUpperCase().replace('-', ' ')];\\nif(concept != null) {\\n    // has question by concept\\n    scenario.questionText = concept.question;\\n    scenario.question.name = concept.name;\\n    scenario.choices = concept.choices;\\n    scenario.multiChoice = concept.multiChoice;\\n    scenario.answerType = concept.answerType;\\n}\\nelse if (scenario.languageJson.semanticTypes[semanticTypeKey] != null) {\\n    // if has question by entity type X semantic type\\n    scenario.questionText = scenario.languageJson.semanticTypes[semanticTypeKey].question;\\n    scenario.answerType = scenario.languageJson.semanticTypes[semanticTypeKey].answerType;\\n}\\nelse if (scenario.languageJson.entityTypes[ayalonEntityType] != null) {\\n    // if has question by entity type\\n    concept = scenario.languageJson.entityTypes[ayalonEntityType];\\n    scenario.questionText = concept.question;\\n    scenario.choices = concept.choices;\\n    scenario.multiChoice = concept.multiChoice;\\n    scenario.answerType = concept.answerType;\\n}  else {\\n    // got concept id without a valid question mapped to it\\n    // this should not happend\\n    scenario.questionText = scenario.question.name + \\\"?\\\"\\n    scenario.answerType = \\\"Boolean\\\";\\n}\\n\\nscenario.questionText = scenario.questionText.replace(\\\"%p1%\\\", scenario.question.name);\"},{\"id\":\"4b1932a7c977-8d1720745c3e8cdb-4079\",\"type\":\"action\",\"label\":\"Log question\",\"designer\":{\"xLocation\":446,\"yLocation\":189,\"next\":\"3710c6e2876e-55c99f0c2563d4f5-647e\"},\"onInit\":\"var userQuestion = {};\\r\\nuserQuestion.question = scenario.concept;\\r\\nuserQuestion.questionText = scenario.questionText;\\r\\nuserQuestion.profile = scenario.profile;\\r\\nuserQuestion.questionsNum = scenario.questionsNum;\\r\\nsession.logCustomEvent('USER_QUESTION', userQuestion);\"},{\"id\":\"3b616b3c2497-7bd649f243256db8-58b0\",\"type\":\"prompt\",\"dataType\":\"object\",\"designer\":{\"xLocation\":598,\"yLocation\":396,\"next\":\"4acbd42df9f1-f3b0d55707ca0fbf-7bb3\"},\"variable\":\"response\",\"stringId\":\"stringId_02e974a5da66a1f8\",\"label\":\"MultiChoice\",\"layout\":\"vertical\",\"attachment\":[{\"type\":\"AdaptiveCard\",\"cardCode\":\"{\\r\\n    \\\"type\\\": \\\"AdaptiveCard\\\",\\r\\n    \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\",\\r\\n    \\\"version\\\": \\\"1.2\\\",\\r\\n    \\\"body\\\": scenario.cardBody\\r\\n}\"}]},{\"id\":\"8aeffd2e40e8-337b6d429d9549c3-722d\",\"type\":\"action\",\"label\":\"Prepare MultiChoices\",\"designer\":{\"xLocation\":600,\"yLocation\":318,\"next\":\"3b616b3c2497-7bd649f243256db8-58b0\"},\"onInit\":\"// first child answer type\\r\\nscenario.multiChoiceAnswerType = Object.values(scenario.multiChoice)[0].answerType;\\r\\n\\r\\nconst choicesCardArr = [];\\r\\n\\r\\nif (scenario.multiChoiceAnswerType === 'Boolean') {\\r\\n    choicesCardArr.push({\\r\\n        \\\"type\\\": \\\"Input.ChoiceSet\\\",\\r\\n        \\\"isMultiSelect\\\": true,\\r\\n        \\\"style\\\": \\\"compact\\\",\\r\\n        \\\"choices\\\": Object.keys(scenario.multiChoice).map(k => ({\\r\\n            title: scenario.multiChoice[k].name,\\r\\n            value: k\\r\\n        })),\\r\\n        \\\"placeholder\\\": \\\"Placeholder text\\\",\\r\\n        \\\"id\\\": \\\"choices\\\"\\r\\n    });\\r\\n} else if (scenario.multiChoiceAnswerType === 'Choice') {\\r\\n    for (const choiceCode in scenario.multiChoice) {\\r\\n        let choiceObj = scenario.multiChoice[choiceCode];\\r\\n        // push columnSet with 2 columns ie. title => ChoicesSet\\r\\n        choicesCardArr.push({\\r\\n            \\\"type\\\": \\\"ColumnSet\\\",\\r\\n            \\\"columns\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"Column\\\",\\r\\n                    \\\"items\\\": [{\\r\\n                        \\\"type\\\": \\\"TextBlock\\\",\\r\\n                        \\\"size\\\": \\\"Small\\\",\\r\\n                        \\\"text\\\": choiceObj.name\\r\\n                    }],\\r\\n                    \\\"width\\\": \\\"100px\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"type\\\": \\\"Column\\\",\\r\\n                    \\\"items\\\": [\\r\\n                        {\\r\\n                            \\\"id\\\": choiceCode,\\r\\n                            \\\"type\\\": \\\"Input.ChoiceSet\\\",\\r\\n                            \\\"choices\\\": choiceObj.choices.map(c => ({\\r\\n                                \\\"title\\\": c,\\r\\n                                \\\"value\\\": c\\r\\n                            })),\\r\\n                            \\\"value\\\": choiceObj.choices[0]\\r\\n                        }\\r\\n                    ],\\r\\n                    \\\"width\\\": \\\"stretch\\\"\\r\\n                }\\r\\n            ]\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\\r\\nscenario.cardBody = [\\r\\n    {\\r\\n        \\\"type\\\": \\\"TextBlock\\\",\\r\\n        \\\"text\\\": scenario.questionText,\\r\\n        \\\"size\\\": \\\"Medium\\\",\\r\\n        \\\"weight\\\": \\\"Bolder\\\",\\r\\n        \\\"wrap\\\": true\\r\\n    },\\r\\n    ...choicesCardArr,\\r\\n    {\\r\\n        \\\"type\\\": \\\"ActionSet\\\",\\r\\n        \\\"Id\\\":\\\"Submit\\\",\\r\\n        \\\"actions\\\": [\\r\\n            {\\r\\n                \\\"type\\\": \\\"Action.Submit\\\",\\r\\n                \\\"title\\\": \\\"Submit\\\"\\r\\n            },\\r\\n            {\\r\\n                \\\"type\\\": \\\"Action.Submit\\\",\\r\\n                \\\"title\\\": \\\"Don't know / Don't want to answer\\\",\\r\\n                \\\"data\\\": {\\r\\n                    \\\"dontKnow\\\": true\\r\\n                }\\r\\n            }\\r\\n        ]\\r\\n    }\\r\\n];\"},{\"id\":\"4acbd42df9f1-f3b0d55707ca0fbf-7bb3\",\"type\":\"action\",\"label\":\"Multichoice Response\",\"designer\":{\"xLocation\":600,\"yLocation\":460,\"next\":\"37caa515995f-5a395085b9bdfa2c-9b2f\"},\"onInit\":\"// if the answer is not object or is object and unknown\\r\\nif (typeof scenario.response !== \\\"object\\\" || scenario.response.dontKnow) {\\r\\n    scenario.response = null;\\r\\n}\"},{\"id\":\"1a3faa5227a9-d3b84705529e7419-838f\",\"type\":\"action\",\"label\":\"Create single result\",\"designer\":{\"xLocation\":336,\"yLocation\":729,\"next\":\"d2c813d56c6d-e873f367b262b7e6-030c\"},\"onInit\":\"scenario.result = [{\\n    ...scenario.question,\\n    value: scenario.response\\n}]\"},{\"id\":\"37caa515995f-5a395085b9bdfa2c-9b2f\",\"type\":\"action\",\"label\":\"Create multiple results\",\"designer\":{\"xLocation\":506,\"yLocation\":729,\"next\":\"d2c813d56c6d-e873f367b262b7e6-030c\"},\"onInit\":\"let resultSet = new Set([]);\\r\\n// the response is null only when user answers \\\"don't know\\\"\\r\\n\\r\\n// get multichoice selected values in set\\r\\nif (scenario.response != null && scenario.multiChoiceAnswerType == \\\"Boolean\\\") {\\r\\n    resultSet = new Set(scenario.response.choices?.split(\\\",\\\") || []);\\r\\n}\\r\\n\\r\\nscenario.result = Object.keys(scenario.multiChoice).map(choiceCode => {\\r\\n    let answer = null;\\r\\n    if (scenario.response != null) {\\r\\n        // in this case codes that are not in resultSet are falsy\\r\\n        if (scenario.multiChoiceAnswerType == \\\"Boolean\\\") {\\r\\n            if (resultSet.has(choiceCode)) {\\r\\n                answer = \\\"True\\\";\\r\\n            } else {\\r\\n                answer = \\\"False\\\";\\r\\n            }\\r\\n        } else {\\r\\n            answer = scenario.response[choiceCode];\\r\\n        }\\r\\n    }\\r\\n    return {\\r\\n        ...scenario.question,\\r\\n        code: choiceCode,\\r\\n        value: answer,\\r\\n        answerType: scenario.multiChoiceAnswerType,\\r\\n    };\\r\\n});\"}],\"breaking\":false,\"interrupting\":false,\"returningMessage\":\"\"}"
}