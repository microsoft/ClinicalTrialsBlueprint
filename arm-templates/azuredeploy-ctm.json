{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "serviceName": {
      "type": "string"
    },
    "env": {
      "type": "string",
      "defaultValue": "prod_us"
    },
    "fhirServerName": {
      "type": "string"
    },
    "acrServer": {
      "type": "string",
      "defaultValue": "ctmprod.azurecr.io"
    },
    "acrUsername": {
      "type": "string",
      "defaultValue": "ctmprod"
    },
    "acrPassword": {
      "type": "securestring"
    },
    "structuringImageName": {
      "type": "string",
      "defaultValue": "ctmprod.azurecr.io/clinical-trials-structuring"
    },
    "queryCountry": {
      "type": "string",
      "defaultValue": ""
    },
    "queryPhases": {
      "type": "string",
      "defaultValue": "phase_1,phase_2,phase_3,phase_4,not_applicable"
    },
    "queryRecruitment": {
      "type": "string",
      "defaultValue": "recruiting"
    },
    "querySponsors": {
      "type": "string",
      "defaultValue": ""
    },
    "queryConditions": {
      "type": "string",
      "defaultValue": ""
    },
    "constituencyParserImageName": {
      "type": "string",
      "defaultValue": "ctmprod.azurecr.io/constituency-parser-server"
    },
    "postgreSqlAdministratorLogin": {
        "type": "string"
    },
    "postgreSqladministratorLoginPassword": {
        "type": "securestring"
    },
    "resourceTags": {
       "type": "object",
       "defaultValue": {
           "Environment": "Dev",
           "Project": "Tutorial"
       }
   }
  },
  "variables": {
    "proxyApiKey":"[uniqueString(subscription().id)]",
    "insightsName": "[concat(parameters('serviceName'),'-ctm-insights')]",
    "structuringName": "[concat(parameters('serviceName'),'-ctm-struct-aci')]",
    "keyVaultName": "[concat(parameters('serviceName'),'-ctm-kv')]",
    "mapsServiceName": "[concat(parameters('serviceName'),'-ctm-map')]",
    "redisCacheName": "[concat(parameters('serviceName'),'-ctm-redis')]",    
    "ctmServicePlan": "[concat(parameters('serviceName'),'-ctm-plan')]",
    "ayalonServicePlan": "[concat(parameters('serviceName'),'-ayalon-plan')]",
    "gatewayWebAppName": "[concat(parameters('serviceName'),'-gateway-webapp')]",
    "gatewayResourceId": "[resourceId('Microsoft.Web/sites',variables('gatewayWebAppName'))]",
    "ayalonWebAppName": "[concat(parameters('serviceName'),'-ayalon-webapp')]",
    "queryEngineWebAppName": "[concat(parameters('serviceName'),'-ctm-qe-webapp')]",
    "queryEngineResourceId": "[resourceId('Microsoft.Web/sites',variables('queryEngineWebAppName'))]",
    "dynamicCriteriaSelectionWebAppName": "[concat(parameters('serviceName'),'-ctm-dcs-webapp')]",
    "dynamicCriteriaSelectionResourceId": "[resourceId('Microsoft.Web/sites',variables('dynamicCriteriaSelectionWebAppName'))]",
    "disqualificationWebAppName": "[concat(parameters('serviceName'),'-ctm-disq-webapp')]",
    "disqualificationResourceId": "[resourceId('Microsoft.Web/sites',variables('disqualificationWebAppName'))]",
    "postgresqlServerFullName":"[concat(parameters('serviceName'),'-ctm-postgresql')]",
    "textAnalyticsName": "[concat(parameters('serviceName'),'-ctm-ta')]",
    "gatewayDockerImageName":"DOCKER|ctmprod.azurecr.io/clinical-trials-gateway:latest",
    "ayalonDockerImageName":"DOCKER|ctmprod.azurecr.io/cognitive-services-healthcare:latest",
    "queryEngineDockerImageName":"DOCKER|ctmprod.azurecr.io/query-engine:latest",
    "dynamicCriteriaSelectionDockerImageName":"DOCKER|ctmprod.azurecr.io/dynamic-criterion-selection:latest",
    "disqualificationDockerImageName":"DOCKER|ctmprod.azurecr.io/clinical-trials-disqualification:latest",
    "structuringResourceId":"[resourceId('Microsoft.ContainerInstance/containerGroups',variables('structuringName'))]",
    "services": {
      "ta4h":"[concat('https://',variables('ayalonWebAppName'),'.azurewebsites.net')]",
      "qe":  "[concat('https://',variables('queryEngineWebAppName'),'.azurewebsites.net')]", 
      "disq":"[concat('https://',variables('disqualificationWebAppName'),'.azurewebsites.net')]", 
      "dcs": "[concat('https://',variables('dynamicCriteriaSelectionWebAppName'),'.azurewebsites.net')]",      
      "fhir": "[concat('https://',parameters('fhirServerName'),'.azurewebsites.net/')]"      
    }
  },
  "resources": [
    {
        "type": "microsoft.insights/components",
        "apiVersion": "2015-05-01",
        "name": "[variables('insightsName')]",
        "location": "[resourceGroup().location]",
        "kind": "web",
        "tags": "[parameters('resourceTags')]",
        "properties": {
            "Application_Type": "web"
        }
    },
    {
        "type": "Microsoft.CognitiveServices/accounts",
        "apiVersion": "2017-04-18",
        "name": "[variables('textAnalyticsName')]",
        "location": "[resourceGroup().location]",
        "sku": {
            "name": "S"
        },
        "tags": "[parameters('resourceTags')]",
        "kind": "TextAnalytics",
        "properties": {
            "customSubDomainName": "[variables('textAnalyticsName')]"
        }
    },
    {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2018-02-01",
        "name": "[variables('ayalonServicePlan')]",
        "location": "[resourceGroup().location]",
        "tags": "[parameters('resourceTags')]",
        "sku": {
            "name": "P3v2",
            "capacity": 2
        },
        "kind": "linux",
        "properties": {
            "perSiteScaling": false,
            "maximumElasticWorkerCount": 1,
            "isSpot": false,
            "reserved": true,
            "isXenon": false,
            "hyperV": false,
            "targetWorkerCount": 0,
            "targetWorkerSizeId": 0
        }
    },    
    {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2018-11-01",
        "name": "[variables('gatewayWebAppName')]",
        "location": "[resourceGroup().location]",
        "tags": "[parameters('resourceTags')]",
        "kind": "app,linux,container",
        "identity": {
            "type": "SystemAssigned"
        },
        "properties": {
            "enabled": true,
            "hostNameSslStates": [
                {
                    "name": "[concat(variables('gatewayWebAppName'), '.azurewebsites.net')]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                },
                {
                    "name": "[concat(variables('gatewayWebAppName'), '.scm.azurewebsites.net')]",
                    "sslState": "Disabled",
                    "hostType": "Repository"
                }
            ],
            "serverFarmId": "[variables('ctmServicePlan')]",
            "reserved": true,
            "isXenon": false,
            "hyperV": false,
            "scmSiteAlsoStopped": false,
            "clientAffinityEnabled": false,
            "clientCertEnabled": false,
            "hostNamesDisabled": false,
            "containerSize": 0,
            "dailyMemoryTimeQuota": 0,
            "httpsOnly": false,
            "redundancyMode": "None",
            "siteConfig":{
              "appSettings": [
                {
                    "name": "DOCKER_REGISTRY_SERVER_URL",
                    "value": "[parameters('acrServer')]"
                },
                {
                    "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                    "value": "[parameters('acrUsername')]"
                },
                {
                    "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                    "value": "[parameters('acrPassword')]"
                },
                {
                  "name":"KEYVAULT_URL",
                  "value":"[concat('https://',variables('keyVaultName'),'.vault.azure.net/')]"
                },
                {
                  "name":"SERVICES",
                  "value":"[string(variables('services'))]"
                },
                {
                  "name":"ALLOWED_PATHS",
                  "value":"/status,/,/ready,/swagger/*,/metadata"
                }
              ]
            }
        }
    },
    {
        "type": "Microsoft.Web/sites/config",
        "apiVersion": "2018-11-01",
        "name": "[concat(variables('gatewayWebAppName'), '/web')]",
        "tags": "[parameters('resourceTags')]",
        "location": "East US",
        "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('gatewayWebAppName'))]"
        ],
        "properties": {
            "numberOfWorkers": 1,
            "defaultDocuments": [
                "Default.htm",
                "Default.html",
                "Default.asp",
                "index.htm",
                "index.html",
                "iisstart.htm",
                "default.aspx",
                "index.php",
                "hostingstart.html"
            ],
            "netFrameworkVersion": "v4.0",
            "linuxFxVersion": "[variables('gatewayDockerImageName')]",
            "requestTracingEnabled": false,
            "remoteDebuggingEnabled": false,
            "remoteDebuggingVersion": "VS2019",
            "httpLoggingEnabled": true,
            "logsDirectorySizeLimit": 35,
            "detailedErrorLoggingEnabled": false,
            "publishingUsername": "$findcare-ctm-gateway-webapp",
            "scmType": "None",
            "use32BitWorkerProcess": true,
            "webSocketsEnabled": false,
            "alwaysOn": true,
            "managedPipelineMode": "Integrated",
            "virtualApplications": [
                {
                    "virtualPath": "/",
                    "physicalPath": "site\\wwwroot",
                    "preloadEnabled": true
                }
            ],
            "loadBalancing": "LeastRequests",
            "experiments": {
                "rampUpRules": []
            },
            "autoHealEnabled": false,
            "localMySqlEnabled": false,
            "managedServiceIdentityId": 1713,
            "ipSecurityRestrictions": [
                {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                }
            ],
            "scmIpSecurityRestrictions": [
                {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                }
            ],
            "scmIpSecurityRestrictionsUseMain": false,
            "http20Enabled": false,
            "minTlsVersion": "1.2",
            "ftpsState": "AllAllowed",
            "reservedInstanceCount": 0
        }
    },
    {
        "type": "Microsoft.Web/sites/hostNameBindings",
        "apiVersion": "2018-11-01",
        "name": "[concat(variables('gatewayWebAppName'), '/', variables('gatewayWebAppName'), '.azurewebsites.net')]",
        "location": "[resourceGroup().location]",
        "tags": "[parameters('resourceTags')]",
        "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('gatewayWebAppName'))]"
        ],
        "properties": {
            "siteName": "[variables('ayalonWebAppName')]",
            "hostNameType": "Verified"
        }
    },
    {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2018-11-01",
        "name": "[variables('ayalonWebAppName')]",
        "tags": "[parameters('resourceTags')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('ayalonServicePlan'))]",            
            "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
        ],
        "kind": "app,linux,container",
        "properties": {
            "enabled": true,
            "hostNameSslStates": [
                {
                    "name": "[concat(variables('ayalonWebAppName'), '.azurewebsites.net')]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                },
                {
                    "name": "[concat(variables('ayalonWebAppName'), '.scm.azurewebsites.net')]",
                    "sslState": "Disabled",
                    "hostType": "Repository"
                }
            ],
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('ayalonServicePlan'))]",
            "reserved": true,
            "isXenon": false,
            "hyperV": false,
            "scmSiteAlsoStopped": false,
            "clientAffinityEnabled": false,
            "clientCertEnabled": false,
            "hostNamesDisabled": false,
            "containerSize": 0,
            "dailyMemoryTimeQuota": 0,
            "httpsOnly": false,
            "redundancyMode": "None",
            "siteConfig": {
                "appSettings": [
                    {
                        "name": "DOCKER_REGISTRY_SERVER_URL",
                        "value": "[parameters('acrServer')]"
                    },
                    {
                        "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                        "value": "[parameters('acrUsername')]"
                    },
                    {
                        "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                        "value": "[parameters('acrPassword')]"
                    },
                    {
                        "name":"ApiKey",
                        "value":"[listKeys(variables('textAnalyticsName'), '2017-04-18').key1]"
                    },
                    {
                        "name":"Billing",
                        "value":"[concat('https://',variables('textAnalyticsName'),'.cognitiveservices.azure.com')]"
                    },
                    {
                        "name":"Eula",
                        "value":"accept"
                    }
                ]
            }
        }
    },
    {
        "type": "Microsoft.Web/sites/config",
        "apiVersion": "2018-11-01",
        "name": "[concat(variables('ayalonWebAppName'), '/web')]",
        "location": "East US",
        "tags": "[parameters('resourceTags')]",
        "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('ayalonWebAppName'))]",
            "[resourceId('Microsoft.CognitiveServices/accounts', variables('textAnalyticsName'))]"
        ],
        "properties": {
            "numberOfWorkers": 1,
            "defaultDocuments": [
                "Default.htm",
                "Default.html",
                "Default.asp",
                "index.htm",
                "index.html",
                "iisstart.htm",
                "default.aspx",
                "index.php",
                "hostingstart.html"
            ],
            "netFrameworkVersion": "v4.0",
            "linuxFxVersion": "[variables('ayalonDockerImageName')]",
            "requestTracingEnabled": false,
            "remoteDebuggingEnabled": false,
            "httpLoggingEnabled": false,
            "logsDirectorySizeLimit": 35,
            "detailedErrorLoggingEnabled": false,
            "publishingUsername": "$ctm-bot",
            "scmType": "None",
            "use32BitWorkerProcess": true,
            "webSocketsEnabled": false,
            "alwaysOn": true,
            "managedPipelineMode": "Integrated",
            "virtualApplications": [
                {
                    "virtualPath": "/",
                    "physicalPath": "site\\wwwroot",
                    "preloadEnabled": true
                }
            ],
            "loadBalancing": "LeastRequests",
            "experiments": {
                "rampUpRules": [
                ]
            },
            "autoHealEnabled": false,
            "localMySqlEnabled": false,
            "ipSecurityRestrictions": [
                {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                }
            ],
            "scmIpSecurityRestrictions": [
                {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                }
            ],
            "scmIpSecurityRestrictionsUseMain": false,
            "http20Enabled": false,
            "minTlsVersion": "1.2",
            "ftpsState": "AllAllowed",
            "reservedInstanceCount": 0
        }
    },
    {
        "type": "Microsoft.Web/sites/hostNameBindings",
        "apiVersion": "2018-11-01",
        "tags": "[parameters('resourceTags')]",
        "name": "[concat(variables('ayalonWebAppName'), '/', variables('ayalonWebAppName'), '.azurewebsites.net')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('ayalonWebAppName'))]"
        ],
        "properties": {
            "siteName": "ctm-bot",
            "hostNameType": "Verified"
        }
    },
    {
      "name": "[variables('mapsServiceName')]",
      "type": "Microsoft.Maps/accounts",
      "apiVersion": "2018-05-01",
      "location": "global",
      "tags": "[parameters('resourceTags')]",
      "sku": {
        "name": "S0"
      }
    },
    {
      "type": "Microsoft.Cache/Redis",
      "apiVersion": "2019-07-01",
      "name": "[variables('redisCacheName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "sku": {
          "name": "Standard",
          "family": "C",
          "capacity": 2
        },
        "enableNonSslPort": false,
        "redisConfiguration": {
          "maxclients": "256",
          "maxmemory-reserved": "2",
          "maxfragmentationmemory-reserved": "12",
          "maxmemory-delta": "2"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-10-01",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[variables('gatewayResourceId')]",
        "[variables('queryEngineResourceId')]",
        "[variables('dynamicCriteriaSelectionResourceId')]",
        "[variables('disqualificationResourceId')]",
        "[variables('structuringResourceId')]"
      ],
      "properties": {
        "enabledForDeployment": false,
        "enabledForTemplateDeployment": false,
        "enabledForDiskEncryption": false,
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
              "tenantId": "[reference(variables('gatewayResourceId'), '2015-08-01', 'Full').Identity.tenantId]",
              "objectId": "[reference(variables('gatewayResourceId'), '2015-08-01', 'Full').Identity.principalId]",
              "permissions": {
                  "secrets": [
                      "get",
                      "list"
                  ]
              }
          },
          {
              "tenantId": "[reference(variables('queryEngineResourceId'), '2015-08-01', 'Full').Identity.tenantId]",
              "objectId": "[reference(variables('queryEngineResourceId'), '2015-08-01', 'Full').Identity.principalId]",
              "permissions": {
                  "secrets": [
                      "get",
                      "list"
                  ]
              }
          },
          {
              "tenantId": "[reference(variables('dynamicCriteriaSelectionResourceId'), '2015-08-01', 'Full').Identity.tenantId]",
              "objectId": "[reference(variables('dynamicCriteriaSelectionResourceId'), '2015-08-01', 'Full').Identity.principalId]",
              "permissions": {
                  "secrets": [
                      "get",
                      "list"
                  ]
              }
          },
          {
              "tenantId": "[reference(variables('disqualificationResourceId'), '2015-08-01', 'Full').Identity.tenantId]",
              "objectId": "[reference(variables('disqualificationResourceId'), '2015-08-01', 'Full').Identity.principalId]",
              "permissions": {
                  "secrets": [
                      "get",
                      "list"
                  ]
              }
          },
          {
              "tenantId": "[reference(variables('structuringResourceId'), '2019-12-01', 'Full').Identity.tenantId]",
              "objectId": "[reference(variables('structuringResourceId'), '2019-12-01', 'Full').Identity.principalId]",
              "permissions": {
                  "secrets": [
                      "get",
                      "list"
                  ]
              }
          }
        ],
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/azuremaps-key')]",
      "apiVersion": "2016-10-01",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Maps/accounts/', variables('mapsServiceName'))]"
      ],
      "properties": {
        "value": "[listKeys(variables('mapsServiceName'),'2018-05-01').primaryKey]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/redis-client-secret')]",
      "tags": "[parameters('resourceTags')]",
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Cache/redis/', variables('redisCacheName'))]"
      ],
      "properties": {
        "value": "[listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2015-08-01').primaryKey]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/proxy-api-key')]",
      "tags": "[parameters('resourceTags')]",
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ],
      "properties": {
        "value": "[variables('proxyApiKey')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/instrumentation-key')]",
      "apiVersion": "2016-10-01",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Insights/components/', variables('insightsName'))]"
      ],
      "properties": {
        "value": "[reference(variables('insightsName'), '2015-05-01').instrumentationKey]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/ctti-client-secret')]",
      "apiVersion": "2016-10-01",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('postgreSqladministratorLoginPassword')]"
      }
    },
    {
      "name": "[variables('structuringName')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-10-01",
      "tags": "[parameters('resourceTags')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Maps/accounts', variables('mapsServiceName'))]",
        "[resourceId('Microsoft.Insights/components/', variables('insightsName'))]"      
      ],
      "properties": {
        "containers": [
          {
            "name": "structuring",
            "properties": {
              "image": "[parameters('structuringImageName')]",
              "command": [
                "dotnet",
                "ClinicalTrialsStructuring.dll",
				"restoreCttiDb"
              ],
              "environmentVariables": [
                {
                  "name": "ASPNETCORE_ENVIRONMENT",
                  "value": "[parameters('env')]"
                },
                {
                  "name": "query__country",
                  "value": "[parameters('queryCountry')]"
                },
                {
                  "name": "query__phases",
                  "value": "[parameters('queryPhases')]"
                },
                {
                  "name": "query__recruitment",
                  "value": "[parameters('queryRecruitment')]"
                },
                {
                  "name": "query__sponsors",
                  "value": "[parameters('querySponsors')]"
                },
                {
                  "name": "query__conditions",
                  "value": "[parameters('queryConditions')]"
                },
                {
                  "name": "key_vault__address",
                  "value": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]"
                },
                {
                  "name": "azure_maps__api_key",
                  "value": "[listKeys(variables('mapsServiceName'),'2018-05-01').primaryKey]"
                },
                {
                  "name": "fhir__address",
                  "value": "[concat('https://',variables('gatewayWebAppName'),'.azurewebsites.net/fhir/')]"
                },
                {
                  "name": "ayalon__address",
                  "value": "[concat('https://',variables('gatewayWebAppName'),'.azurewebsites.net/ta4h/') ]"
                },
                {
                  "name": "ctti__host",
                  "value": "[concat(variables('postgresqlServerFullName'),'.postgres.database.azure.com')]"              
                },
                {
                  "name": "ctti__user_name",
                  "value": "[parameters('postgreSqlAdministratorLogin')]"
                },
          			{
                  "name": "ctti__secret_name",
                  "value": "ctti-client-secret"
                },
                {
                  "name":"application_insight__instrumentation_key",
                  "value":"[reference(variables('insightsName'), '2015-05-01').instrumentationKey]"
                },
                {
                  "name":"redis__address",
                  "value":"[concat(variables('redisCacheName'),'.redis.cache.windows.net')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 2,
                  "memoryInGB": 4
                }
              }
            }
          },
          {
            "name": "constituency-parser",
            "properties": {
              "image": "[parameters('constituencyParserImageName')]",
              "resources": {
                "requests": {
                  "cpu": 2,
                  "memoryInGB": 4
                }
              }
            }
          }
        ],
        "imageRegistryCredentials": [
          {
            "server": "[parameters('acrServer')]",
            "username": "[parameters('acrUsername')]",
            "password": "[parameters('acrPassword')]"
          }
        ],
        "restartPolicy": "OnFailure",
        "osType": "Linux"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('ctmServicePlan')]",
      "tags": "[parameters('resourceTags')]",
      "location": "[resourceGroup().location]",
      "sku": {
          "name": "P3v2",
          "capacity": 1
      },
      "kind": "linux",
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('queryEngineWebAppName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('resourceTags')]",
      "kind": "app,linux,container",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('ctmServicePlan'))]",
        "[concat('Microsoft.Insights/components/', variables('insightsName'))]"      
      ],
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('queryEngineWebAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('queryEngineWebAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[variables('ctmServicePlan')]",
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None",
        "siteConfig": {
          "appSettings": [
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[parameters('acrServer')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[parameters('acrUsername')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[parameters('acrPassword')]"
            },
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "[parameters('env')]"
            },
            {
              "name": "DOCKER_ENABLE_CI",
              "value": "true"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name":"key_vault__address",
              "value":"[concat('https://',variables('keyVaultName'),'.vault.azure.net/')]"
            },
            {
                "name": "ctti__host",
                "value": "[concat(variables('postgresqlServerFullName'),'.postgres.database.azure.com')]"
            },
            {
              "name":"ctti__user_name",
              "value":"[parameters('postgreSqlAdministratorLogin')]"             
            },
            {
              "name":"ctti__secret_name",
              "value":"ctti-client-secret"             
            },
            {
              "name":"ctti__database",
              "value":"aact"
            },
            {
              "name":"redis__address",
              "value":"[concat(variables('redisCacheName'),'.redis.cache.windows.net')]"
            },
            {
              "name":"redis__secret_name",
              "value":"redis-client-secret"
            },
            {
              "name":"ayalon__address",
              "value":"[concat('https://',variables('ayalonWebAppName'),'.azurewebsites.net/') ]"
            },
            {
              "name":"application_insight__instrumentation_key",
              "value":"[reference(variables('insightsName'), '2015-05-01').instrumentationKey]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "tags": "[parameters('resourceTags')]",
      "name": "[concat(variables('queryEngineWebAppName'), '/web')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('queryEngineWebAppName'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "[variables('queryEngineDockerImageName')]",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2019",
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$ctm-query-engine-webapp-eastus-dev",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": true,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": true
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": [
          ]
        },
        "autoHealEnabled": false,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('queryEngineWebAppName'), '/', variables('queryEngineWebAppName'), '.azurewebsites.net')]",
      "tags": "[parameters('resourceTags')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('queryEngineWebAppName'))]"
      ],
      "properties": {
        "siteName": "[variables('queryEngineWebAppName')]",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "tags": "[parameters('resourceTags')]",
      "name": "[variables('dynamicCriteriaSelectionWebAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "app,linux,container",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('ctmServicePlan'))]",
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('dynamicCriteriaSelectionWebAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('dynamicCriteriaSelectionWebAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[variables('ctmServicePlan')]",
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None",
        "siteConfig": {
          "appSettings": [
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[parameters('acrServer')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[parameters('acrUsername')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[parameters('acrPassword')]"
            },
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "[parameters('env')]"
            },
            {
              "name": "DOCKER_ENABLE_CI",
              "value": "true"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name":"key_vault__address",
              "value":"[concat('https://',variables('keyVaultName'),'.vault.azure.net/')]"
            },
            {
                "name": "ctti__host",
                "value": "[concat(variables('postgresqlServerFullName'),'.postgres.database.azure.com')]"              
            },
            {
              "name":"ctti__user_name",
              "value":"[parameters('postgreSqlAdministratorLogin')]"             
            },
            {
              "name":"ctti__secret_name",
              "value":"ctti-client-secret"             
            },
            {
              "name":"redis__address",
              "value":"[concat(variables('redisCacheName'),'.redis.cache.windows.net')]"
            },
            {
              "name":"redis__secret_name",
              "value":"redis-client-secret"
            },
            {
              "name":"ayalon__address",
              "value":"[concat('https://',variables('ayalonWebAppName'),'.azurewebsites.net/') ]"
            },
            {
              "name":"application_insight__instrumentation_key",
              "value":"[reference(variables('insightsName'), '2015-05-01').instrumentationKey]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('dynamicCriteriaSelectionWebAppName'), '/web')]",
      "tags": "[parameters('resourceTags')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('dynamicCriteriaSelectionWebAppName'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "[variables('dynamicCriteriaSelectionDockerImageName')]",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2019",
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$ctm-dynamic-criterion-selection-webapp-eastus-dev",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": true,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": true
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": [
          ]
        },
        "autoHealEnabled": false,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "tags": "[parameters('resourceTags')]",
      "name": "[concat(variables('dynamicCriteriaSelectionWebAppName'), '/', variables('dynamicCriteriaSelectionWebAppName'), '.azurewebsites.net')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('dynamicCriteriaSelectionWebAppName'))]"
      ],
      "properties": {
        "siteName": "ctm-dynamic-criterion-selection-webapp-eastus-dev",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "tags": "[parameters('resourceTags')]",
      "name": "[variables('disqualificationWebAppName')]",
      "location": "[resourceGroup().location]",
      "identity":{
        "type":"SystemAssigned"
      },
      "kind": "app,linux,container",
      "dependsOn":[
        "[resourceId('Microsoft.Web/serverfarms', variables('ctmServicePlan'))]"
      ],
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('disqualificationWebAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('disqualificationWebAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[variables('ctmServicePlan')]",
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None",
        "siteConfig": {
          "appSettings": [
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[parameters('acrServer')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[parameters('acrUsername')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[parameters('acrPassword')]"
            },
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "[parameters('env')]"
            },
            {
              "name": "DOCKER_ENABLE_CI",
              "value": "true"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name":"key_vault__address",
              "value":"[concat('https://',variables('keyVaultName'),'.vault.azure.net/')]"
            },
            {
                "name": "ctti__host",
                "value": "[concat(variables('postgresqlServerFullName'),'.postgres.database.azure.com')]"              
            },
            {
              "name":"ctti__user_name",
              "value":"[parameters('postgreSqlAdministratorLogin')]"             
            },
            {
              "name":"ctti__secret_name",
              "value":"ctti-client-secret"             
            },
            {
              "name":"redis__address",
              "value":"[concat(variables('redisCacheName'),'.redis.cache.windows.net')]"
            },
            {
              "name":"redis__secret_name",
              "value":"redis-client-secret"
            },
            {
              "name":"ayalon__address",
              "value":"[concat('https://',variables('ayalonWebAppName'),'.azurewebsites.net/') ]"
            },
            {
              "name":"application_insight__instrumentation_key",
              "value":"[reference(variables('insightsName'), '2015-05-01').instrumentationKey]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "tags": "[parameters('resourceTags')]",
      "name": "[concat(variables('disqualificationWebAppName'), '/web')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('disqualificationWebAppName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "[variables('disqualificationDockerImageName')]",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2019",
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$ctm-clinical-trials-disqualification-webapp-eastus-dev",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": true,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": true
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": [
          ]
        },
        "autoHealEnabled": false,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "tags": "[parameters('resourceTags')]",
      "name": "[concat(variables('disqualificationWebAppName'), '/', variables('disqualificationWebAppName'), '.azurewebsites.net')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('disqualificationWebAppName'))]"
      ],
      "properties": {
        "siteName": "ctm-clinical-trials-disqualification-webapp-eastus-dev",
        "hostNameType": "Verified"
      }
    },
    {
        "type": "Microsoft.DBforPostgreSQL/servers",
        "apiVersion": "2017-12-01",
        "name": "[variables('postgresqlServerFullName')]",
        "tags": "[parameters('resourceTags')]",
        "location": "[resourceGroup().location]",
        "sku": {
            "name": "GP_Gen5_4",
            "tier": "GeneralPurpose",
            "family": "Gen5",
            "capacity": 4
        },
		    "resources": [{
                    "name": "AllowAzureServices",
                    "type": "firewallRules",
                    "apiVersion": "2017-12-01",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    },
					"dependsOn": [
					  "[variables('postgresqlServerFullName')]"
				  ]
        }],
        "properties": {
            "administratorLogin": "[parameters('postgreSqlAdministratorLogin')]",
            "administratorLoginPassword": "[parameters('postgreSqladministratorLoginPassword')]",                
            "storageProfile": {
                "storageMB": 102400,
                "backupRetentionDays": 7,
                "geoRedundantBackup": "Disabled",
                "storageAutogrow": "Enabled"
            },
            "version": "11",
            "sslEnforcement": "Disabled"
        }
    }
  ],
  "outputs":{
    "proxyApiKey": {
      "type":"string",
      "value":"[variables('proxyApiKey')]"
    },
    "gatewayName": {
      "type":"string",
      "value": "[variables('gatewayWebAppName')]"
    },
    "gatewayEndpoint": {
      "type":"string",
      "value":"[concat('https://', variables('gatewayWebAppName'),'.azurewebsites.net')]"
    },
    "queryEngineName": {
      "type":"string",
      "value":"[variables('queryEngineWebAppName')]"
    },
    "queryEngineEndpoint": {
      "type":"string",
      "value":"[concat('https://', variables('queryEngineWebAppName'),'.azurewebsites.net')]"
    },
    "dynamicCriteriaSelectionName": {
      "type":"string",
      "value":"[variables('dynamicCriteriaSelectionWebAppName')]"
    },
    "dynamicCriteriaSelectionEndpoint": {
      "type":"string",
      "value":"[concat('https://', variables('dynamicCriteriaSelectionWebAppName'),'.azurewebsites.net')]"
    },
    "disqualificationName" : {
      "type":"string",
      "value":"[variables('disqualificationWebAppName')]"
    },
    "disqualificationEndpoint": {
      "type":"string",
      "value":"[concat('https://', variables('disqualificationWebAppName'),'.azurewebsites.net')]"
    },
    "postgresqlConnectionString":{
        "type":"string",
        "value":"[concat('psql \"host=',variables('postgresqlServerFullName'),'.postgres.database.azure.com port=5432 dbname=ctdb user=',
                  parameters('postgreSqlAdministratorLogin'),'@',variables('postgresqlServerFullName'), ' password=<password> sslmode=require\"')]"
    }  
  }
}
